{
  "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
  "name": "Query for Company",
  "id": "com.example.camunda.query-for-company",
  "description": "Service task to search for companies using multiple criteria: name, industry, city, and revenue. At least one search parameter must be provided.",
  "version": 1,
  "category": {
    "id": "connectors",
    "name": "Connectors"
  },
  "appliesTo": [
    "bpmn:ServiceTask"
  ],
  "elementType": {
    "value": "bpmn:ServiceTask"
  },
  "groups": [
    {
      "id": "input",
      "label": "Input Parameters"
    },
    {
      "id": "output",
      "label": "Output Mapping"
    },
    {
      "id": "errors",
      "label": "Error Handling"
    }
  ],
  "properties": [
    {
      "type": "Hidden",
      "value": "query-for-company",
      "binding": {
        "type": "zeebe:taskDefinition:type"
      }
    },
    {
      "id": "companyName",
      "label": "Company Name",
      "description": "The name of the company to search for. Can be a static value or FEEL expression (e.g., =companyName, =company.name)",
      "type": "Text",
      "group": "input",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "companyName"
      },
      "constraints": {
        "notEmpty": false
      }
    },
    {
      "id": "industry",
      "label": "Industry",
      "description": "The industry sector to filter by. Can be a static value or FEEL expression (e.g., =industry, =\"Technology\")",
      "type": "Text",
      "group": "input",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "industry"
      },
      "constraints": {
        "notEmpty": false
      }
    },
    {
      "id": "city",
      "label": "City",
      "description": "The city location to filter by. Can be a static value or FEEL expression (e.g., =city, =\"San Francisco\")",
      "type": "Text",
      "group": "input",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "city"
      },
      "constraints": {
        "notEmpty": false
      }
    },
    {
      "id": "revenue",
      "label": "Revenue",
      "description": "The minimum revenue to filter by. Can be a static value or FEEL expression (e.g., =revenue, =1000000)",
      "type": "Text",
      "group": "input",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "revenue"
      },
      "constraints": {
        "notEmpty": false
      }
    },
    {
      "id": "fuzzyMatching",
      "label": "Fuzzy Matching",
      "description": "When true, enables fuzzy/similarity matching for company searches using advanced algorithms. Applies to company name and address fields with partial matching. When false or not set, uses exact matching only.",
      "type": "Dropdown",
      "choices": [
        {
          "name": "False (Exact matching)",
          "value": "false"
        },
        {
          "name": "True (Fuzzy matching)",
          "value": "true"
        }
      ],
      "group": "input",
      "binding": {
        "type": "zeebe:input",
        "name": "fuzzyMatching"
      },
      "constraints": {
        "notEmpty": false
      }
    },
    {
      "id": "resultVariable",
      "label": "Result Variable",
      "description": "Process variable to store the complete company search result (companies list, search parameters, and status)",
      "type": "String",
      "group": "output",
      "binding": {
        "type": "zeebe:output",
        "source": "=companySearchResult",
        "target": "companySearchResult"
      },
      "constraints": {
        "notEmpty": true
      }
    }
  ],
  "icon": {
    "contents": "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='18' height='18' viewBox='0 0 24 24' fill='none' stroke='%2328a745' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M3 21h18'%3E%3C/path%3E%3Cpath d='M5 21V7l8-4v18'%3E%3C/path%3E%3Cpath d='M19 21V11l-6-4'%3E%3C/path%3E%3C/svg%3E"
  }
}
